pipeline {
    agent any

    environment {
        AWS_ACCOUNT_ID = "211125753995"  // Replace with your AWS account ID
        AWS_DEFAULT_REGION = "ap-south-1"  // Replace with your AWS region
        FRONTEND_REPO_NAME = "frontend-repo"  // Replace with your ECR repository name for frontend
        FRONTEND_IMAGE_TAG = "frontend-latest"  // Tag for your frontend image
        REPOSITORY_URI = "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${FRONTEND_REPO_NAME}"
        FRONTEND_IP = "13.233.124.207"  // Updated IP of your EC2 instance
    }

    stages {
        // Logging into AWS ECR
        stage('Logging into AWS ECR') {
            steps {
                script {
                    withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', credentialsId: 'aws-credentials-id']]) {
                        // Use AWS credentials to log in to ECR
                        sh """
                            aws ecr get-login-password --region ${AWS_DEFAULT_REGION} | \
                            docker login --username AWS --password-stdin ${REPOSITORY_URI}
                        """
                    }
                }
            }
        }

        // Cloning the Git repository for frontend
        stage('Cloning Frontend Git') {
            steps {
                checkout([$class: 'GitSCM', 
                          branches: [[name: '*/main']], 
                          userRemoteConfigs: [[url: 'https://github.com/imabhosale/Devops-task-frontend.git']]])
            }
        }

        // Building Frontend Docker image
        stage('Building Frontend image') {
            steps {
                script {
                    // Ensure you're in the correct directory where Dockerfile is present
                    frontendImage = docker.build("${FRONTEND_REPO_NAME}:${FRONTEND_IMAGE_TAG}")
                }
            }
        }

        // Pushing Frontend image to ECR
        stage('Pushing Frontend to ECR') {
            steps {
                script {
                    // Directly push the image to ECR after tagging
                    sh "docker push ${REPOSITORY_URI}:${FRONTEND_IMAGE_TAG}"
                }
            }
        }

        // Deploying Frontend to EC2 instance inside a Docker container
        stage('Deploying Frontend') {
            steps {
                script {
                    // Use the stored SSH private key from Jenkins credentials
                    withCredentials([sshUserPrivateKey(credentialsId: 'jenkins-ec2-key', keyFileVariable: 'SSH_KEY')]) {
                        // SSH into the EC2 instance and deploy the frontend
                        sh """
                            ssh -o StrictHostKeyChecking=no -i \$SSH_KEY ubuntu@${FRONTEND_IP} '
                                # Log in to ECR
                                aws ecr get-login-password --region ${AWS_DEFAULT_REGION} | docker login --username AWS --password-stdin ${REPOSITORY_URI} &&
                                # Pull the frontend Docker image
                                docker pull ${REPOSITORY_URI}:${FRONTEND_IMAGE_TAG} &&
                                # Stop and remove any existing container
                                docker stop frontend-container || true &&
                                docker rm frontend-container || true &&
                                # Run the new frontend container
                                docker run -d -p 80:3000 --name frontend-container ${REPOSITORY_URI}:${FRONTEND_IMAGE_TAG}
                            '
                        """
                    }
                }
            }
        }
    }
}
